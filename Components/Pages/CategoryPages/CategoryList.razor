@page "/category"
@inject ICategoryRepository categoriesRepository

@if (isProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading" />
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient m-lg-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2"> Category List </h2>
                </div>
            </div>
        </div>
        <div class="card-body py-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href="category/create" class="btn btn-secondary" style="width: 250px">
                        <i class="bi bi-plus-square"></i> Add new Category
                    </a>
                </div>
            </div>
            @if (categories.Any())
            {
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th style="width: 1%">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var obj in categories)
                        {
                            <tr>
                                <td>
                                    @obj.Name
                                </td>
                                <td>
                                    <a href="@($"category/update/{obj.Id}")" class="btn btn-primary">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>
                                    @* <a href="@($"category/update/{obj.Id}")" class=btn btn-primary"> Edit </a> *@
                                    <button class="btn btn-danger">
                                        <i class="bi bi-trash3"></i></button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
}

@code {
    public bool isProcessing { get; set; } = true;
    private IEnumerable<Category> categories { get; set; } = new List<Category>();


    // protected override async Task OnInitializedAsync()
    // {
    //     isProcessing = true;
    //     // await Task.Yield();
    //     // await Task.Delay(2000);
    //     await LoadCategories();
    //     // Thread.Sleep(5000);
    //     isProcessing = false;
    // }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategories();
            isProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadCategories()
    {
        //load categories
        categories = await categoriesRepository.GetAllAsync();
    }

}
